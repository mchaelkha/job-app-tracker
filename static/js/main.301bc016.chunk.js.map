{"version":3,"sources":["components/ErrorMessage.js","components/CreateForm.js","components/CreateJobApp.js","components/JobApp.js","components/JobList.js","index.js","App.js"],"names":["ErrorMessage","value","style","color","inputPattern","RegExp","areaPattern","CreateForm","status","addJobApp","setShowForm","useState","company","setCompany","position","setPosition","description","setDescription","message","setMessage","getDate","useCallback","today","Date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","handleCompany","e","target","handlePosition","handleDescription","handleSubmit","preventDefault","length","test","date","className","onSubmit","type","name","maxLength","onChange","rows","CreateJobApp","showForm","id","IconButton","size","onClick","JobApp","backgroundColor","onFocus","overflowY","height","onBlur","contentEditable","readOnly","defaultValue","JobList","jobs","removeJobApp","filter","job","map","key","ReactDOM","render","statusLists","jobApps","setJobApps","jobApp","copyJobApps","jobsCopy","i","splice","statusList","document","getElementById"],"mappings":"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","file":"static/js/main.301bc016.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ErrorMessage({ value }) {\n  return (\n    <p style={{ color: '#fd4659' }}>{value}</p>\n  );\n}\n\nErrorMessage.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorMessage from './ErrorMessage';\nimport './CreateForm.css';\n\nconst inputPattern = RegExp('[a-zA-Z0-9&,.]+');\nconst areaPattern = RegExp('[a-zA-Z0-9&,.\\\\n]+');\n\nexport default function CreateForm({ status, addJobApp, setShowForm }) {\n  const [company, setCompany] = useState('');\n  const [position, setPosition] = useState('');\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n\n  const getDate = useCallback(() => {\n    const today = new Date();\n    const dd = String(today.getDate()).padStart(2, '0');\n    const mm = String(today.getMonth() + 1).padStart(2, '0');\n    const yyyy = today.getFullYear();\n    return `${mm}/${dd}/${yyyy}`;\n  }, []);\n\n  const handleCompany = useCallback((e) => {\n    setCompany(e.target.value);\n  }, []);\n\n  const handlePosition = useCallback((e) => {\n    setPosition(e.target.value);\n  }, []);\n\n  const handleDescription = useCallback((e) => {\n    setDescription(e.target.value);\n  }, []);\n\n  const handleSubmit = useCallback((e) => {\n    e.preventDefault();\n    if (company.length > 30 || position.length > 30) {\n      setMessage('Invalid company or position length.');\n    }\n    if (!inputPattern.test(company)\n        || !inputPattern.test(position)\n        || !areaPattern.test(description)) {\n      setMessage('Invalid input found.');\n      return;\n    }\n    addJobApp({\n      company,\n      position,\n      description,\n      status,\n      date: getDate(),\n    });\n    setShowForm(false);\n    setMessage('');\n  }, [addJobApp, getDate, setMessage, setShowForm, company,\n    position, description, status]);\n\n  return (\n    <div className=\"CreateForm\">\n      { message.length > 0\n        && (\n          <ErrorMessage value={message} />\n        )}\n      <form onSubmit={handleSubmit}>\n        <div className=\"InputContainer\">\n          Company\n          <input\n            type=\"text\"\n            name=\"Company\"\n            maxLength=\"30\"\n            value={company}\n            onChange={handleCompany}\n          />\n        </div>\n        <div className=\"InputContainer\">\n          Position\n          <input\n            type=\"text\"\n            name=\"Position\"\n            maxLength=\"30\"\n            value={position}\n            onChange={handlePosition}\n          />\n        </div>\n        <div className=\"DescriptionContainer\">\n          Description\n          <textarea\n            rows=\"6\"\n            type=\"text\"\n            name=\"Description\"\n            value={description}\n            onChange={handleDescription}\n          />\n        </div>\n        <div className=\"SubmitButton\">\n          <input type=\"submit\" value=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nCreateForm.propTypes = {\n  status: PropTypes.string.isRequired,\n  addJobApp: PropTypes.func.isRequired,\n  setShowForm: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\nimport CreateForm from './CreateForm';\nimport './CreateJobApp.css';\n\nexport default function CreateJobApp({ status, addJobApp }) {\n  const [showForm, setShowForm] = useState(false);\n\n  return (\n    <div className=\"CreateJobApp\">\n      <span id=\"status-heading\">{status}</span>\n      <IconButton\n        id=\"add-button\"\n        size=\"small\"\n        onClick={(e) => setShowForm(!showForm)}\n      >\n        { !showForm\n          && <Add />}\n        { showForm\n          && <Remove />}\n      </IconButton>\n      { showForm\n        && (\n          <CreateForm\n            status={status}\n            addJobApp={addJobApp}\n            setShowForm={setShowForm}\n          />\n        )}\n    </div>\n  );\n}\n\nCreateJobApp.propTypes = {\n  status: PropTypes.string.isRequired,\n  addJobApp: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './JobApp.css';\n\nexport default function JobApp({\n  company, position, description, status, date,\n}) {\n  const [color] = useState(\n    status === 'Applied' ? '#c74e9f'\n      : status === 'Rejected' ? '#ff2e43'\n        : status === 'Interview' ? '#4466ee'\n          : status === 'Offer' ? '#88e234' : '#000'\n  );\n  return (\n    <li className=\"JobApp\" style={{ backgroundColor: color }}>\n      <ul>\n        <li>\n          <b>Company:&nbsp;</b>\n          <span id=\"tabbed\">{company}</span>\n        </li>\n        <li>\n          <b>Position:&nbsp;</b>\n          <span id=\"tabbed\">{position}</span>\n        </li>\n        <li>\n          <b>Date:&nbsp;</b>\n          <span id=\"tabbed\">{date}</span>\n        </li>\n        <li>\n          <b>Description:&nbsp;</b>\n          <textarea\n            id=\"description\"\n            onFocus={(e) => {\n              e.target.style.overflowY = 'scroll';\n              e.target.style.height = '144pt';\n            }}\n            onBlur={(e) => {\n              e.target.style.overflowY = 'auto';\n              e.target.style.height = '48pt';\n            }}\n            contentEditable={false}\n            readOnly\n            defaultValue={description}\n          />\n        </li>\n      </ul>\n    </li>\n  );\n}\n\nJobApp.propTypes = {\n  company: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Clear from '@material-ui/icons/Clear';\nimport CreateJobApp from './CreateJobApp';\nimport JobApp from './JobApp';\nimport './JobList.css';\n\nexport default function JobList({\n  jobs, status, addJobApp, removeJobApp,\n}) {\n  return (\n    <div className=\"JobList\">\n      <CreateJobApp status={status} addJobApp={addJobApp} />\n      <ul>\n        { jobs.filter((job) => job.status === status).map((job) => (\n          <div className=\"job-app-container\" key={job.company + job.position}>\n            <IconButton\n              id=\"clear-button\"\n              onClick={(e) => { removeJobApp(job); }}\n            >\n              <Clear />\n            </IconButton>\n            <JobApp\n              company={job.company}\n              position={job.position}\n              description={job.description}\n              status={job.status}\n              date={job.date}\n            />\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nJobList.propTypes = {\n  jobs: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n  })).isRequired,\n  status: PropTypes.string.isRequired,\n  addJobApp: PropTypes.func.isRequired,\n  removeJobApp: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState, useCallback } from 'react';\nimport JobList from './components/JobList';\nimport './App.css';\n\nexport default function App() {\n  const [statusLists] = useState([\n    'Applied', 'Rejected', 'Interview', 'Offer',\n  ]);\n  const [jobApps, setJobApps] = useState([]);\n\n  const addJobApp = useCallback((jobApp) => {\n    const copyJobApps = [...jobApps, jobApp];\n    setJobApps(copyJobApps);\n  }, [jobApps, setJobApps]);\n\n  const removeJobApp = useCallback((jobApp) => {\n    const jobsCopy = [...jobApps];\n    for (let i = jobsCopy.length - 1; i >= 0; i--) {\n      const j = jobsCopy[i];\n      if (j === jobApp) {\n        jobsCopy.splice(i, 1);\n        break;\n      }\n    }\n    setJobApps(jobsCopy);\n  }, [jobApps]);\n\n  return (\n    <div className=\"App\">\n      <h1>Job Application Tracker</h1>\n      <div className=\"status-list-container\">\n        { statusLists.map((statusList) => (\n          <JobList\n            key={statusList}\n            jobs={jobApps}\n            status={statusList}\n            addJobApp={addJobApp}\n            removeJobApp={removeJobApp}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}